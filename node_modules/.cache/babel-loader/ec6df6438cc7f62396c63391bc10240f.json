{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/Downloads/task_Dashboard/src/components/chart/Barchart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { getData } from '../../service/Fackserver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = (student, professor, hod, staff) => ({\n  labels: ['Students', 'Professors', 'Hod', 'Staff'],\n  datasets: [{\n    data: [student, professor, hod, staff],\n    backgroundColor: ['#2f7b18', '#167071', '#a2971f', '#a22823'],\n    hoverBackgroundColor: ['#2f7b18', '#167071', '#a2971f', '#a22823']\n  }]\n});\n\nclass Barchart extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = getState();\n\n    this.componentDidMount = async () => {\n      let response_GetallData = await getData();\n      let GetAllData = response_GetallData;\n      console.log('GetAllData', GetAllData);\n      var rez = {};\n      GetAllData.forEach(function (item) {\n        rez[item.type] ? rez[item.type]++ : rez[item.type] = 1;\n      });\n      console.log(rez);\n      let student = rez.student;\n      let professor = rez.professor;\n      let hod = rez.hod;\n      let staff = rez.staff;\n      setInterval(() => {\n        this.setState(getState(student, professor, hod, staff));\n      }, 1000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Barchart;","map":{"version":3,"sources":["/home/thinesh/Downloads/task_Dashboard/src/components/chart/Barchart.js"],"names":["React","Bar","getData","getState","student","professor","hod","staff","labels","datasets","data","backgroundColor","hoverBackgroundColor","Barchart","Component","state","componentDidMount","response_GetallData","GetAllData","console","log","rez","forEach","item","type","setInterval","setState","render","responsive","maintainAspectRatio"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;;;AAIC,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAASC,SAAT,EAAmBC,GAAnB,EAAuBC,KAAvB,MAAkC;AAClDC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAY,YAAZ,EAAyB,KAAzB,EAA+B,OAA/B,CAD0C;AAE9CC,EAAAA,QAAQ,EAAE,CACR;AACFC,IAAAA,IAAI,EAAC,CAACN,OAAD,EAASC,SAAT,EAAmBC,GAAnB,EAAuBC,KAAvB,CADH;AAEFI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,SAAhC,CAFf;AAGEC,IAAAA,oBAAoB,EAAE,CAAE,SAAF,EAAa,SAAb,EAAuB,SAAvB,EAAiC,SAAjC;AAHxB,GADQ;AAFoC,CAAlC,CAAjB;;AAWD,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/BZ,QAAQ,EADuB;;AAAA,SAGvCa,iBAHuC,GAGnB,YAAY;AAC9B,UAAIC,mBAAmB,GAAG,MAAMf,OAAO,EAAvC;AACA,UAAIgB,UAAU,GAAGD,mBAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,UAAzB;AACA,UAAIG,GAAG,GAAC,EAAR;AACAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAASC,IAAT,EAAc;AAC/BF,QAAAA,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiBH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,EAAjB,GAAqCH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiB,CAAtD;AACD,OAFD;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACF,UAAIjB,OAAO,GAAEiB,GAAG,CAACjB,OAAjB;AACA,UAAIC,SAAS,GAAGgB,GAAG,CAAChB,SAApB;AACA,UAAIC,GAAG,GAAGe,GAAG,CAACf,GAAd;AACA,UAAIC,KAAK,GAAGc,GAAG,CAACd,KAAhB;AACAkB,MAAAA,WAAW,CAAC,MAAM;AAClB,aAAKC,QAAL,CAAcvB,QAAQ,CAACC,OAAD,EAASC,SAAT,EAAmBC,GAAnB,EAAuBC,KAAvB,CAAtB;AACC,OAFU,EAER,IAFQ,CAAX;AAGC,KAnBsC;AAAA;;AAqBvCoB,EAAAA,MAAM,GAAG;AACT,wBACA;AAAA,6BACE,QAAC,GAAD;AAAM,QAAA,IAAI,EAAE,KAAKZ,KAAjB;AAAyB,QAAA,OAAO,EAAE;AACVa,UAAAA,UAAU,EAAE,IADF;AAEVC,UAAAA,mBAAmB,EAAE;AAFX;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAOC;;AA7BsC;;AAgCvC,eAAehB,QAAf","sourcesContent":["\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {getData} from '../../service/Fackserver'\n\n\n\n const getState = (student,professor,hod,staff) => ({\n  labels: ['Students','Professors','Hod','Staff'],\n      datasets: [\n        {\n      data:[student,professor,hod,staff],\n      backgroundColor: ['#2f7b18', '#167071','#a2971f','#a22823'],\t\n          hoverBackgroundColor: [ '#2f7b18', '#167071','#a2971f','#a22823']\n        }\n    ]\n});\n\nclass Barchart extends React.Component {\nstate = getState();\n\ncomponentDidMount = async () => {     \n  let response_GetallData = await getData()\n  let GetAllData = response_GetallData;\n  console.log('GetAllData',GetAllData);\n  var rez={};\n  GetAllData.forEach(function(item){\n    rez[item.type] ? rez[item.type]++ :  rez[item.type] = 1;\n  });\n  console.log(rez);\nlet student= rez.student\nlet professor = rez.professor\nlet hod = rez.hod\nlet staff = rez.staff\nsetInterval(() => {\nthis.setState(getState(student,professor,hod,staff));\n}, 1000);\n}\n\nrender() {  \nreturn (\n<div >\n  <Bar  data={this.state}  options={{\n                          responsive: true,\n                          maintainAspectRatio: true,  }}/>\n</div>\n);\n}\n}\n\nexport default Barchart\n\n\n"]},"metadata":{},"sourceType":"module"}