{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/Dashbord/my-app/src/Piechart.js\";\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { getData } from './service/Fackserver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = (g, l, b) => ({\n  labels: ['Total Charter Party Data Upload', 'Total Charter inquiry Actioned', 'Hr'],\n  datasets: [{\n    data: [g, l, b],\n    backgroundColor: ['#31910c', '#ffa500', '7c0c0c'],\n    hoverBackgroundColor: ['#31910c', '#ffa500', '7c0c0c']\n  }]\n});\n\nclass Piechart extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = getState();\n\n    this.componentDidMount = async () => {\n      let response_GetallData = await getData();\n      let GetAllData = response_GetallData;\n      console.log('GetAllData', GetAllData);\n      var rez = {};\n      GetAllData.forEach(function (item) {\n        rez[item.type] ? rez[item.type]++ : rez[item.type] = 1;\n      });\n      console.log(rez); // let  bcapRefNumber = GetAllData.filter(ele=>ele.type === \"type1\");\n      //  let  cpReferenceNo = GetAllData.filter(ele=>ele.type ===\" type2\");\n\n      let green = rez.type1;\n      let yellow = 2;\n      let block = 1;\n      console.log(green, yellow);\n      setInterval(() => {\n        this.setState(getState(green, yellow, block));\n      }, 1000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full \",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: this.state,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this);\n  }\n\n} // export default Piechart\n\n\nexport default Piechart; // import React from 'react';\n// import { Pie } from 'react-chartjs-2';\n// import {getData} from './service/Fackserver'\n// export const data = {\n//   labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//   datasets: [\n//     {\n//       label: '# of Votes',\n//       data: [12, 19, 3, 5, 2, 3],\n//       backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)',\n//         'rgba(54, 162, 235, 0.2)',\n//         'rgba(255, 206, 86, 0.2)',\n//         'rgba(75, 192, 192, 0.2)',\n//         'rgba(153, 102, 255, 0.2)',\n//         'rgba(255, 159, 64, 0.2)',\n//       ],\n//       borderColor: [\n//         'rgba(255, 99, 132, 1)',\n//         'rgba(54, 162, 235, 1)',\n//         'rgba(255, 206, 86, 1)',\n//         'rgba(75, 192, 192, 1)',\n//         'rgba(153, 102, 255, 1)',\n//         'rgba(255, 159, 64, 1)',\n//       ],\n//       borderWidth: 1,\n//     },\n//   ],\n// };\n// export function Piechart() {\n//   return <Pie data={data} />;\n// }","map":{"version":3,"sources":["/home/thinesh/Dashbord/my-app/src/Piechart.js"],"names":["React","Pie","getData","getState","g","l","b","labels","datasets","data","backgroundColor","hoverBackgroundColor","Piechart","Component","state","componentDidMount","response_GetallData","GetAllData","console","log","rez","forEach","item","type","green","type1","yellow","block","setInterval","setState","render","responsive","maintainAspectRatio"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;;;AAIC,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,MAAY;AAC5BC,EAAAA,MAAM,EAAE,CAAC,iCAAD,EAAoC,gCAApC,EAAqE,IAArE,CADoB;AAExBC,EAAAA,QAAQ,EAAE,CACR;AACFC,IAAAA,IAAI,EAAC,CAACL,CAAD,EAAGC,CAAH,EAAKC,CAAL,CADH;AAEFI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAsB,QAAtB,CAFf;AAGEC,IAAAA,oBAAoB,EAAE,CAAE,SAAF,EAAa,SAAb,EAAuB,QAAvB;AAHxB,GADQ;AAFc,CAAZ,CAAjB;;AAWD,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/BX,QAAQ,EADuB;;AAAA,SAGvCY,iBAHuC,GAGnB,YAAY;AAC9B,UAAIC,mBAAmB,GAAG,MAAMd,OAAO,EAAvC;AACA,UAAIe,UAAU,GAAGD,mBAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,UAAzB;AACA,UAAIG,GAAG,GAAC,EAAR;AACAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAASC,IAAT,EAAc;AAC/BF,QAAAA,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiBH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,EAAjB,GAAqCH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiB,CAAtD;AACD,OAFD;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAR8B,CAQb;AACnB;;AACA,UAAII,KAAK,GAAGJ,GAAG,CAACK,KAAhB;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAaK,KAAb,EAAoBE,MAApB;AACAE,MAAAA,WAAW,CAAC,MAAM;AAClB,aAAKC,QAAL,CAAc1B,QAAQ,CAACqB,KAAD,EAAOE,MAAP,EAAcC,KAAd,CAAtB;AACC,OAFU,EAER,IAFQ,CAAX;AAGC,KApBsC;AAAA;;AAsBvCG,EAAAA,MAAM,GAAG;AACT,wBACA;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,6BACE,QAAC,GAAD;AAAM,QAAA,IAAI,EAAE,KAAKhB,KAAjB;AAAyB,QAAA,OAAO,EAAE;AACViB,UAAAA,UAAU,EAAE,IADF;AAEVC,UAAAA,mBAAmB,EAAE;AAFX;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAOC;;AA9BsC,C,CAgCvC;;;AAEA,eAAepB,QAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport {getData} from './service/Fackserver'\n\n\n\n const getState = (g,l,b) => ({\n  labels: ['Total Charter Party Data Upload', 'Total Charter inquiry Actioned','Hr'],\n      datasets: [\n        {\n      data:[g,l,b],\n      backgroundColor: ['#31910c', '#ffa500','7c0c0c'],\t\n          hoverBackgroundColor: [ '#31910c', '#ffa500','7c0c0c']\n        }\n    ]\n});\n\nclass Piechart extends React.Component {\nstate = getState();\n\ncomponentDidMount = async () => {     \n  let response_GetallData = await getData()\n  let GetAllData = response_GetallData;\n  console.log('GetAllData',GetAllData);\n  var rez={};\n  GetAllData.forEach(function(item){\n    rez[item.type] ? rez[item.type]++ :  rez[item.type] = 1;\n  });\n  console.log(rez);// let  bcapRefNumber = GetAllData.filter(ele=>ele.type === \"type1\");\n//  let  cpReferenceNo = GetAllData.filter(ele=>ele.type ===\" type2\");\nlet green = rez.type1\nlet yellow = 2\nlet block = 1\nconsole.log( green ,yellow);\nsetInterval(() => {\nthis.setState(getState(green,yellow,block));\n}, 1000);\n}\n\nrender() {  \nreturn (\n<div className=\"flex flex-col items-center w-full \">\n  <Pie  data={this.state}  options={{\n                          responsive: true,\n                          maintainAspectRatio: true,  }}/>\n</div>\n);\n}\n}\n// export default Piechart\n\nexport default Piechart\n\n// import React from 'react';\n// import { Pie } from 'react-chartjs-2';\n// import {getData} from './service/Fackserver'\n\n// export const data = {\n//   labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n//   datasets: [\n//     {\n//       label: '# of Votes',\n//       data: [12, 19, 3, 5, 2, 3],\n//       backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)',\n//         'rgba(54, 162, 235, 0.2)',\n//         'rgba(255, 206, 86, 0.2)',\n//         'rgba(75, 192, 192, 0.2)',\n//         'rgba(153, 102, 255, 0.2)',\n//         'rgba(255, 159, 64, 0.2)',\n//       ],\n//       borderColor: [\n//         'rgba(255, 99, 132, 1)',\n//         'rgba(54, 162, 235, 1)',\n//         'rgba(255, 206, 86, 1)',\n//         'rgba(75, 192, 192, 1)',\n//         'rgba(153, 102, 255, 1)',\n//         'rgba(255, 159, 64, 1)',\n//       ],\n//       borderWidth: 1,\n//     },\n//   ],\n// };\n\n// export function Piechart() {\n//   return <Pie data={data} />;\n// }"]},"metadata":{},"sourceType":"module"}