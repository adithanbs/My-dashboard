{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/Dashbord/my-app/src/Barchart.js\";\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import faker from 'faker';\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { getData } from './service/Fackserver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = (g, l, b, r) => ({\n  labels: ['Students', 'Professors', 'Hod', 'Staff'],\n  datasets: [{\n    data: [g, l, b, r],\n    backgroundColor: ['#2f7b18', '#167071', '#a2971f', '#a22823'],\n    hoverBackgroundColor: ['#2f7b18', '#167071', '#a2971f', '#a22823']\n  }]\n});\n\nclass Barchart extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = getState();\n\n    this.componentDidMount = async () => {\n      let response_GetallData = await getData();\n      let GetAllData = response_GetallData;\n      console.log('GetAllData', GetAllData);\n      var rez = {};\n      GetAllData.forEach(function (item) {\n        rez[item.type] ? rez[item.type]++ : rez[item.type] = 1;\n      });\n      console.log(rez);\n      let green = rez.student;\n      let yellow = rez.professor;\n      let block = rez.hod;\n      let red = rez.staff;\n      console.log(green, yellow);\n      setInterval(() => {\n        this.setState(getState(green, yellow, block, red));\n      }, 1000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full \",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Barchart; // export const options = {\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top', //as const,\n//     },\n//     title: {\n//       display: true,\n//       text: 'Chart.js Bar Chart',\n//     },\n//   },\n// };\n// const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n// export const data = {\n//   labels,\n//   datasets: [\n//     {\n//       label: 'Dataset 1',\n//       data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n//       backgroundColor: 'rgba(255, 99, 132, 0.5)',\n//     },\n//     {\n//       label: 'Dataset 2',\n//       data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n//       backgroundColor: 'rgba(53, 162, 235, 0.5)',\n//     },\n//   ],\n// };\n// export function Barchart() {\n//   return <>\n//     <Bar options={options} data={data} />\n//   </>;\n// }","map":{"version":3,"sources":["/home/thinesh/Dashbord/my-app/src/Barchart.js"],"names":["React","Bar","getData","getState","g","l","b","r","labels","datasets","data","backgroundColor","hoverBackgroundColor","Barchart","Component","state","componentDidMount","response_GetallData","GetAllData","console","log","rez","forEach","item","type","green","student","yellow","professor","block","hod","red","staff","setInterval","setState","render","responsive","maintainAspectRatio"],"mappings":";AAAA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;;;AAIC,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOC,CAAP,MAAc;AAC9BC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAY,YAAZ,EAAyB,KAAzB,EAA+B,OAA/B,CADsB;AAE1BC,EAAAA,QAAQ,EAAE,CACR;AACFC,IAAAA,IAAI,EAAC,CAACN,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOC,CAAP,CADH;AAEFI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,SAAhC,CAFf;AAGEC,IAAAA,oBAAoB,EAAE,CAAE,SAAF,EAAa,SAAb,EAAuB,SAAvB,EAAiC,SAAjC;AAHxB,GADQ;AAFgB,CAAd,CAAjB;;AAWD,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/BZ,QAAQ,EADuB;;AAAA,SAGvCa,iBAHuC,GAGnB,YAAY;AAC9B,UAAIC,mBAAmB,GAAG,MAAMf,OAAO,EAAvC;AACA,UAAIgB,UAAU,GAAGD,mBAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,UAAzB;AACA,UAAIG,GAAG,GAAC,EAAR;AACAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAASC,IAAT,EAAc;AAC/BF,QAAAA,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiBH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,EAAjB,GAAqCH,GAAG,CAACE,IAAI,CAACC,IAAN,CAAH,GAAiB,CAAtD;AACD,OAFD;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACF,UAAII,KAAK,GAAGJ,GAAG,CAACK,OAAhB;AACA,UAAIC,MAAM,GAAGN,GAAG,CAACO,SAAjB;AACA,UAAIC,KAAK,GAAGR,GAAG,CAACS,GAAhB;AACA,UAAIC,GAAG,GAAGV,GAAG,CAACW,KAAd;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAaK,KAAb,EAAoBE,MAApB;AACAM,MAAAA,WAAW,CAAC,MAAM;AAClB,aAAKC,QAAL,CAAc/B,QAAQ,CAACsB,KAAD,EAAOE,MAAP,EAAcE,KAAd,EAAoBE,GAApB,CAAtB;AACC,OAFU,EAER,IAFQ,CAAX;AAGC,KApBsC;AAAA;;AAsBvCI,EAAAA,MAAM,GAAG;AACT,wBACA;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,6BACE,QAAC,GAAD;AAAM,QAAA,IAAI,EAAE,KAAKpB,KAAjB;AAAyB,QAAA,OAAO,EAAE;AACVqB,UAAAA,UAAU,EAAE,IADF;AAEVC,UAAAA,mBAAmB,EAAE;AAFX;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAOC;;AA9BsC;;AAiCvC,eAAexB,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import faker from 'faker';\n\n\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {getData} from './service/Fackserver'\n\n\n\n const getState = (g,l,b,r) => ({\n  labels: ['Students','Professors','Hod','Staff'],\n      datasets: [\n        {\n      data:[g,l,b,r],\n      backgroundColor: ['#2f7b18', '#167071','#a2971f','#a22823'],\t\n          hoverBackgroundColor: [ '#2f7b18', '#167071','#a2971f','#a22823']\n        }\n    ]\n});\n\nclass Barchart extends React.Component {\nstate = getState();\n\ncomponentDidMount = async () => {     \n  let response_GetallData = await getData()\n  let GetAllData = response_GetallData;\n  console.log('GetAllData',GetAllData);\n  var rez={};\n  GetAllData.forEach(function(item){\n    rez[item.type] ? rez[item.type]++ :  rez[item.type] = 1;\n  });\n  console.log(rez);\nlet green = rez.student\nlet yellow = rez.professor\nlet block = rez.hod\nlet red = rez.staff\nconsole.log( green ,yellow);\nsetInterval(() => {\nthis.setState(getState(green,yellow,block,red));\n}, 1000);\n}\n\nrender() {  \nreturn (\n<div className=\"flex flex-col items-center w-full \">\n  <Bar  data={this.state}  options={{\n                          responsive: true,\n                          maintainAspectRatio: true,  }}/>\n</div>\n);\n}\n}\n\nexport default Barchart\n\n\n// export const options = {\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top', //as const,\n//     },\n//     title: {\n//       display: true,\n//       text: 'Chart.js Bar Chart',\n//     },\n//   },\n// };\n\n// const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n// export const data = {\n//   labels,\n//   datasets: [\n//     {\n//       label: 'Dataset 1',\n//       data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n//       backgroundColor: 'rgba(255, 99, 132, 0.5)',\n//     },\n//     {\n//       label: 'Dataset 2',\n//       data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n//       backgroundColor: 'rgba(53, 162, 235, 0.5)',\n//     },\n//   ],\n// };\n\n// export function Barchart() {\n//   return <>\n//     <Bar options={options} data={data} />\n//   </>;\n// }"]},"metadata":{},"sourceType":"module"}