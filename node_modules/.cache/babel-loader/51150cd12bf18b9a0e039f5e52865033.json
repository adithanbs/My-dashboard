{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { Types } from '../actions/actionTypes';\nconst userLogin = createAction(Types.USER_LOGIN);\nconst userLogout = createAction(Types.USER_LOGOUT);\nexport const userReducer = createReducer({}, builder => {\n  builder.addCase(userLogin, (state, action) => {\n    return { ...state,\n      ...action.payload.data.getCustomers,\n      address: { ...action.payload.data.getCustomers.address\n      }\n    };\n  }).addCase(userLogout, (state, action) => {\n    return {};\n  }).addDefaultCase(state => state);\n});","map":{"version":3,"sources":["E:/IGSB2B_Admin/src/redux/reducers/user-reducer.js"],"names":["createAction","createReducer","Types","userLogin","USER_LOGIN","userLogout","USER_LOGOUT","userReducer","builder","addCase","state","action","payload","data","getCustomers","address","addDefaultCase"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,MAAMC,SAAS,GAAGH,YAAY,CAACE,KAAK,CAACE,UAAP,CAA9B;AACA,MAAMC,UAAU,GAAGL,YAAY,CAACE,KAAK,CAACI,WAAP,CAA/B;AAEA,OAAO,MAAMC,WAAW,GAAGN,aAAa,CACpC,EADoC,EAEnCO,OAAD,IAAa;AACTA,EAAAA,OAAO,CACFC,OADL,CACaN,SADb,EACwB,CAACO,KAAD,EAAQC,MAAR,KAAmB;AACnC,WAAO,EACH,GAAGD,KADA;AAEH,SAAGC,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,YAFpB;AAGHC,MAAAA,OAAO,EAAE,EACL,GAAGJ,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,YAApB,CAAiCC;AAD/B;AAHN,KAAP;AAOH,GATL,EAUKN,OAVL,CAUaJ,UAVb,EAUyB,CAACK,KAAD,EAAQC,MAAR,KAAmB;AACpC,WAAO,EAAP;AACH,GAZL,EAaKK,cAbL,CAaqBN,KAAD,IAAWA,KAb/B;AAcH,CAjBmC,CAAjC","sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport { Types } from '../actions/actionTypes';\r\n\r\nconst userLogin = createAction(Types.USER_LOGIN);\r\nconst userLogout = createAction(Types.USER_LOGOUT);\r\n\r\nexport const userReducer = createReducer(\r\n    {},\r\n    (builder) => {\r\n        builder\r\n            .addCase(userLogin, (state, action) => {\r\n                return {\r\n                    ...state ,\r\n                    ...action.payload.data.getCustomers,\r\n                    address: {\r\n                        ...action.payload.data.getCustomers.address\r\n                    }\r\n                };\r\n            })\r\n            .addCase(userLogout, (state, action) => {\r\n                return {};\r\n            })\r\n            .addDefaultCase((state) => state);\r\n    }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}